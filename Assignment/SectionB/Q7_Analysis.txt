/*
    Q.7: You are consultant working for a small computation-intensive investment company,
    and they have the following type of problem they want to solve over and over. A
    typical instance of the problem is the following. They are doing a simulation in
    which they look at n consecutive days of a given stock, at some point in the past.
    Let’s number the days  = 1,2,...; for each day i, they have a price "() per
    share for the stock on that day (For simplicity, the price was same during each day).
    Suppose during this time period, they wanted to buy 1000 shares on some day and sell
    all these shares on some (later) day. They want to know: When should they have bought
    and when should they have sold in order to have made as much money as possible. (If
    there was no way to make money during the n days, you should report this instead). For
    example, suppose n = 3, p(1)=9, p(2)= 1, p(3)= 5. Then you should return  “Buy on day 2
    and selling on day 3” means that they would have made $4 per share. Show how to find
    the correct numbers  and % in time &('().
    
    Submitted By: Anjali Bansal (04)
*/


*******************************
Approach
*******************************

=> Iterative


*******************************
Function: 
maxProfit(price)
*******************************

/*
    Objective       : To find maximum profilt
    Input parameters: Vector, price
    Return Value    : Integer, maximum profit
*/


*******************************
Time Complexity
*******************************

The for loop in function maxProfit will max run till the size of price vector, say n.
All other statements will take constant time.

Therefore, T(n) = O(n)

=> Time complexity = O(n)
